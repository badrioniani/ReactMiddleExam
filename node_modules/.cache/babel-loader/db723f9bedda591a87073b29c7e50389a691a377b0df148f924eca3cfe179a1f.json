{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Desktop\\\\j79zmk\\\\src\\\\RegistrationComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './RegistrationComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationComponent = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    surname: '',\n    email: '',\n    nickname: '',\n    password: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const nameRef = useRef();\n  const surnameRef = useRef();\n  const emailRef = useRef();\n  const nicknameRef = useRef();\n  const passwordRef = useRef();\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const displayError = message => {\n    setErrorMessage(message);\n  };\n  const validateName = name => {\n    const nameRegex = /^[a-zA-Z]+$/;\n    return nameRegex.test(name);\n  };\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validateNickname = nickname => {\n    const nicknameRegex = /^[a-z0-9]+$/;\n    return nicknameRegex.test(nickname);\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*\\d).{8,}$/;\n    return passwordRegex.test(password);\n  };\n  const register = () => {\n    displayError('');\n    const name = nameRef.current.value.trim();\n    const surname = surnameRef.current.value.trim();\n    const email = emailRef.current.value.trim();\n    const nickname = nicknameRef.current.value.trim();\n    const password = passwordRef.current.value;\n    if (!validateName(name) || name === '') {\n      displayError('Name must contain only letters of the Latin alphabet and must not be empty.');\n      return;\n    }\n    if (!validateName(surname) || surname === '') {\n      displayError('Surname must contain only letters of the Latin alphabet and must not be empty.');\n      return;\n    }\n    if (!validateEmail(email) || email === '') {\n      displayError('Invalid email format or email is empty.');\n      return;\n    }\n    if (!validateNickname(nickname) || nickname === '') {\n      displayError('Nickname must contain only lowercase letters and numbers and must not be empty.');\n      return;\n    }\n    if (!validatePassword(password) || password === '') {\n      displayError('Password must be at least 8 characters long and contain at least 1 digit.');\n      return;\n    }\n    alert('Registration successful!');\n    setFormData({\n      name: '',\n      surname: '',\n      email: '',\n      nickname: '',\n      password: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleInputChange,\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"surname\",\n        children: \"Surname:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"surname\",\n        name: \"surname\",\n        value: formData.surname,\n        onChange: handleInputChange,\n        ref: surnameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleInputChange,\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nickname\",\n        children: \"Nickname:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nickname\",\n        name: \"nickname\",\n        value: formData.nickname,\n        onChange: handleInputChange,\n        ref: nicknameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        ref: passwordRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationComponent, \"YTmxDz0tSfsX6svXZQC2NN3PLS0=\");\n_c = RegistrationComponent;\nexport default RegistrationComponent;\nvar _c;\n$RefreshReg$(_c, \"RegistrationComponent\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","RegistrationComponent","_s","formData","setFormData","name","surname","email","nickname","password","errorMessage","setErrorMessage","nameRef","surnameRef","emailRef","nicknameRef","passwordRef","handleInputChange","e","value","target","prevData","displayError","message","validateName","nameRegex","test","validateEmail","emailRegex","validateNickname","nicknameRegex","validatePassword","passwordRegex","register","current","trim","alert","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","ref","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/student/Desktop/j79zmk/src/RegistrationComponent.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './RegistrationComponent.css';\r\n\r\nconst RegistrationComponent = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    nickname: '',\r\n    password: '',\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const nameRef = useRef();\r\n  const surnameRef = useRef();\r\n  const emailRef = useRef();\r\n  const nicknameRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const displayError = (message) => {\r\n    setErrorMessage(message);\r\n  };\r\n\r\n  const validateName = (name) => {\r\n    const nameRegex = /^[a-zA-Z]+$/;\r\n    return nameRegex.test(name);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateNickname = (nickname) => {\r\n    const nicknameRegex = /^[a-z0-9]+$/;\r\n    return nicknameRegex.test(nickname);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordRegex = /^(?=.*\\d).{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const register = () => {\r\n    displayError('');\r\n\r\n    const name = nameRef.current.value.trim();\r\n    const surname = surnameRef.current.value.trim();\r\n    const email = emailRef.current.value.trim();\r\n    const nickname = nicknameRef.current.value.trim();\r\n    const password = passwordRef.current.value;\r\n\r\n    if (!validateName(name) || name === '') {\r\n      displayError('Name must contain only letters of the Latin alphabet and must not be empty.');\r\n      return;\r\n    }\r\n\r\n    if (!validateName(surname) || surname === '') {\r\n      displayError('Surname must contain only letters of the Latin alphabet and must not be empty.');\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email) || email === '') {\r\n      displayError('Invalid email format or email is empty.');\r\n      return;\r\n    }\r\n\r\n    if (!validateNickname(nickname) || nickname === '') {\r\n      displayError('Nickname must contain only lowercase letters and numbers and must not be empty.');\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(password) || password === '') {\r\n      displayError('Password must be at least 8 characters long and contain at least 1 digit.');\r\n      return;\r\n    }\r\n\r\n    alert('Registration successful!');\r\n    setFormData({\r\n      name: '',\r\n      surname: '',\r\n      email: '',\r\n      nickname: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleInputChange}\r\n          ref={nameRef}\r\n        />\r\n\r\n        <label htmlFor=\"surname\">Surname:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"surname\"\r\n          name=\"surname\"\r\n          value={formData.surname}\r\n          onChange={handleInputChange}\r\n          ref={surnameRef}\r\n        />\r\n\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleInputChange}\r\n          ref={emailRef}\r\n        />\r\n\r\n        <label htmlFor=\"nickname\">Nickname:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nickname\"\r\n          name=\"nickname\"\r\n          value={formData.nickname}\r\n          onChange={handleInputChange}\r\n          ref={nicknameRef}\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          ref={passwordRef}\r\n        />\r\n\r\n        <button type=\"button\" onClick={register}>\r\n          Register\r\n        </button>\r\n        {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}